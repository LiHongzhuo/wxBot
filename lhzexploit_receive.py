# -*- coding: utf-8 -*-
from wxbot import *
import os
import ConfigParser
import lhz_mysql
import MySQLdb
import sys
import lhzoss
import lhzhttp
import lhzasr
import thread
import lhzconf
import lhzutil
import lhzimg

# 设置文件编码
# reload(sys)
# sys.setdefaultencoding('utf-8')
# 获取配置群名
# config = ConfigParser.ConfigParser()
# path = os.path.split(os.path.realpath(__file__))[0] + '/config.conf'
# config.read(path)
# list = config.get('makelove', 'groupname').decode('utf-8').strip(',').split(',')

# f = open('config.txt')
# s = f.read()
# s = json.loads(s)
# f.close()
# list = s['groupname']


def containsGroupname(s):  # 判断是否在配置群名中
    for t in lhzconf.groupnamelist:
        # print t
        # print s
        if t in s:
            return True


def whichEncode(text):  # 判断字符串的编码
    text0 = text[0]
    try:
        text0.decode('utf8')
    except Exception, e:
        if "unexpected end of data" in str(e):
            return "utf8"
        elif "invalid start byte" in str(e):
            return "gbk_gb2312"
        elif "ascii" in str(e):
            return "unicode"
    return "utf8"

#将相对文件路径转变成阿里云上传的key
def dealFilePathForUpload(filepath):
    # filepath = 'wxbot/'+filepath[filepath.index(os.path.sep+'temp'+os.path.sep)+6:]
    filepath = 'wxbot/'+os.path.basename(filepath)
    lastindexofdot = lhzutil.find_last(filepath,'.')
    filepath = filepath[:lastindexofdot]+'_'+str(int(time.time()*1000))+filepath[lastindexofdot:]
    return filepath

class MyWXBot(WXBot):
    def handle_msg_all(self, msg):  # 处理所有事件
        # print msg
        content = msg['content']
        data = content['data']
        isself = msg['isself']
        user1 = msg['user']
        from_user_name = MySQLdb.escape_string(user1['name'])
        if msg['msg_type_id'] == 3 and data != '':  # 判断是群聊消息
            if (isself == 1 or containsGroupname(from_user_name)):  # 判断群名称在对应配置
                wtime = int(round(time.time() * 1000))
                # rawdata = json.dumps(msg).decode('unicode-escape').encode('gbk')
                # print rawdata
                content = msg['content']
                user2 = content['user']
                msg_id = long(msg['msg_id'])
                MsgType = int(content['MsgType'])
                from_user_id = MySQLdb.escape_string(user1['id'])
                send_user_id = MySQLdb.escape_string(user2['id'])
                send_user_name = MySQLdb.escape_string(user2['name'])
                to_user_id = MySQLdb.escape_string(msg['to_user_id'])
                CreateTime = int(content['CreateTime'])
                if MsgType == 3:#图片
                    filepath = self.get_msg_img(msg_id)
                    dfilepath = dealFilePathForUpload(filepath)
                    contentdata = lhzoss.upload(filepath,dfilepath)
                    #压缩图片
                    if os.path.getsize(filepath)>1000000:
                        lhzimg.JfzBlogImgThumb(filepath, filepath)
                        content2 = lhzoss.upload(filepath,lhzutil.thumbFilePath(dfilepath))
                    os.remove(filepath)
                elif MsgType == 34:#语音
                    filepath = self.get_voice(msg_id)
                    contentdata = lhzoss.upload(filepath,dealFilePathForUpload(filepath))
                    os.remove(filepath)
                    asrtaskid = lhzhttp.getTaskid(contentdata)
                elif MsgType == 43:#视频
                    filepath = self.get_video(msg_id)
                    contentdata = lhzoss.upload(filepath,dealFilePathForUpload(filepath))
                    os.remove(filepath)
                else:
                    contentdata = MySQLdb.escape_string(str(content['data']))
                # print contentdata
                #MySQLdb.escape_string(rawdata)
                sql = "select count(*) from wechatdata where msg_id=%d AND wtime>(UNIX_TIMESTAMP(NOW())-60)*1000" % msg_id#排重
                results = lhz_mysql.query(sql)
                if results[0][0] == 0:
                    sql2 = "INSERT INTO wechatdata (wtime,msg_id,MsgType,send_user_id,send_user_name,from_user_id,from_user_name,contentdata,content2,to_user_id,CreateTime,asrtaskid,isself) VALUES (%d,%d,%d,'%s','%s','%s','%s','%s',%s,'%s',%d,%s,%d)" % (
                        wtime, msg_id,MsgType, send_user_id, send_user_name, from_user_id, from_user_name, contentdata,"'"+content2+"'" if 'content2' in dir() else 'null', to_user_id, CreateTime, "'"+asrtaskid+"'" if 'asrtaskid' in dir() else 'null', isself)
                    lhz_mysql.execute(sql2)  # 插入数据库

def dealVoice():
    while 1:
        lhzasr.dealMysqlByTaskid() #循环检测处理智能语音识别结果更新至数据库中
        time.sleep(60)

def main():
    # 创建多线程，转换智能语音
    try:
        thread.start_new_thread( dealVoice, () )
    except:
        print "Error: unable to start thread"
    bot = MyWXBot()
    # bot.DEBUG = True
    # bot.conf['qr'] = 'png'
    bot.continuelogin = True  # 李宏卓改的功能，使微信可持续登录
    bot.run()
    # while 1:
    #     pass


if __name__ == '__main__':
    main()
